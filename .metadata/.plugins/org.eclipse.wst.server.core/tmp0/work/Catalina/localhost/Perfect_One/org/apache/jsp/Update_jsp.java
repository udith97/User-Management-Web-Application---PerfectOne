/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-05-09 17:42:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class Update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

try
{
	Class.forName("com.mysql.jdbc.Driver");  //load driver 
	
	Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers2","root",""); // create connection 
	
	if(request.getParameter("btn_update")!=null) //check button click event not null
	{
		int hide; 
		
		String fullName_up,email_up,userName_up,password_up;
		
		hide=Integer.parseInt(request.getParameter("txt_hide")); //it is hidden id get for update record
		fullName_up=request.getParameter("txt_fullname");  //txt_name
		email_up=request.getParameter("txt_email"); //txt_owner
		userName_up=request.getParameter("txt_username");
		password_up=request.getParameter("txt_password");
				
				
		PreparedStatement pstmt=null; //create statement  
		
		pstmt=con.prepareStatement("update users set fullName=?, Email=?, userName=?, password=? where SLNo=?"); //sql update query 
		pstmt.setString(1,fullName_up);
		pstmt.setString(2,email_up);
		pstmt.setString(3,userName_up);
		pstmt.setString(4,password_up);
		
		pstmt.setInt(5,hide);
		pstmt.executeUpdate(); //execute query
		
		con.close(); //connection close

		out.println("Update Successfully...! Click Back link."); //after update record successfully message
	}	
	
}
catch(Exception e)
{
	out.println(e);
}


      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\r\n");
      out.write("\t\t<title>JSP:Insert, Update, Delete using MySQL</title>\r\n");
      out.write("\t\t\r\n");
      out.write("\t<!--css for div main class and table-->\r\n");
      out.write("\t<style type=\"text/css\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t.main\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\twidth:700px;;\r\n");
      out.write("\t\t\tmargin-left:250px;\r\n");
      out.write("\t\t\tpadding: 10px;\r\n");
      out.write("\t\t\tborder: 5px solid grey;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttable\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tfont-family: arial, sans-serif;\r\n");
      out.write("\t\t\tborder-collapse: collapse;\r\n");
      out.write("\t\t\twidth: 600px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\ttd\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tborder: 5px solid silver;\r\n");
      out.write("\t\t\ttext-align: left;\r\n");
      out.write("\t\t\tpadding: 8px;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t</style>\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- javascript for form validation-->\r\n");
      out.write("\t\t<script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tfunction validate()\r\n");
      out.write("\t\t\t{\r\n");
      out.write("\t\t\t\tvar name = document.myform.txt_name;\r\n");
      out.write("\t\t\t\tvar owner = document.myform.txt_owner;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tif (name.value == \"\")\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\twindow.alert(\"please enter name ?\");\r\n");
      out.write("\t\t\t\t\tname.focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif (owner.value == \"\")\r\n");
      out.write("\t\t\t\t{\r\n");
      out.write("\t\t\t\t\twindow.alert(\"please enter owner ?\");\r\n");
      out.write("\t\t\t\t\towner.focus();\r\n");
      out.write("\t\t\t\t\treturn false;\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</script>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</head>\r\n");
      out.write("\t\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"main\">\r\n");
      out.write("\r\n");
      out.write("\t<form method=\"post\" name=\"myform\"  onsubmit=\"return validate();\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<center>\r\n");
      out.write("\t\t\t<h1>Update Record</h1>\r\n");
      out.write("\t\t</center>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<table>\t\r\n");
      out.write("\t\t   ");

		try
		{
			Class.forName("com.mysql.jdbc.Driver"); //load driver  
		
			Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/customers2","root",""); // create connection  
	
			if(request.getParameter("edit")!=null) 
			{
				int id=Integer.parseInt(request.getParameter("edit"));
		
				String fullName,Email,userName,password;
		
				PreparedStatement pstmt=null; // create statement
				
				pstmt=con.prepareStatement("select * from users where SLNo=?"); // sql select query
				pstmt.setInt(1,id);
				ResultSet rs=pstmt.executeQuery(); // execute query store in resultset object rs.
				
				while(rs.next()) 
				{
					id=rs.getInt(1);
					fullName=rs.getString(2);
					Email=rs.getString(3);
					userName=rs.getString(4);
					password=rs.getString(5);
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Full Name</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"txt_fullname\" value=\"");
      out.print(fullName);
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Email</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"txt_email\" value=\"");
      out.print(Email);
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>User Name</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"txt_username\" value=\"");
      out.print(userName);
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>Password</td>\r\n");
      out.write("\t\t\t\t<td><input type=\"text\" name=\"txt_password\" value=\"");
      out.print(password);
      out.write("\"></td>\r\n");
      out.write("\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td><input type=\"submit\" name=\"btn_update\" value=\"Update\"></td>\t\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"txt_hide\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("\t\t");

				}
			}
		}
		catch(Exception e)
		{
			out.println(e);
		}
		
      out.write("\t\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</form>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\t\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
